// Mocks generated by Mockito 5.4.4 from annotations
// in dart_fake_store_api_wrapper/test/infrastructure/repositories/repositories_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i4;

import 'package:dart_fake_store_api_wrapper/dart_fake_store_api_wrapper.dart'
    as _i2;
import 'package:dart_fake_store_api_wrapper/src/infrastructure/datasources/remote_data_source.dart'
    as _i3;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeProductEntity_0 extends _i1.SmartFake implements _i2.ProductEntity {
  _FakeProductEntity_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeCartEntity_1 extends _i1.SmartFake implements _i2.CartEntity {
  _FakeCartEntity_1(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeIdEntity_2 extends _i1.SmartFake implements _i2.IdEntity {
  _FakeIdEntity_2(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeTokenEntity_3 extends _i1.SmartFake implements _i2.TokenEntity {
  _FakeTokenEntity_3(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeUserEntity_4 extends _i1.SmartFake implements _i2.UserEntity {
  _FakeUserEntity_4(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [RemoteDataSource].
///
/// See the documentation for Mockito's code generation for more information.
class MockRemoteDataSource extends _i1.Mock implements _i3.RemoteDataSource {
  MockRemoteDataSource() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.Future<List<_i2.ProductEntity>> getProducts() => (super.noSuchMethod(
        Invocation.method(
          #getProducts,
          [],
        ),
        returnValue:
            _i4.Future<List<_i2.ProductEntity>>.value(<_i2.ProductEntity>[]),
      ) as _i4.Future<List<_i2.ProductEntity>>);

  @override
  _i4.Future<_i2.ProductEntity> getSingleProduct(int? productId) =>
      (super.noSuchMethod(
        Invocation.method(
          #getSingleProduct,
          [productId],
        ),
        returnValue: _i4.Future<_i2.ProductEntity>.value(_FakeProductEntity_0(
          this,
          Invocation.method(
            #getSingleProduct,
            [productId],
          ),
        )),
      ) as _i4.Future<_i2.ProductEntity>);

  @override
  _i4.Future<_i2.CartEntity> sendProductToCart(_i2.CartEntity? cart) =>
      (super.noSuchMethod(
        Invocation.method(
          #sendProductToCart,
          [cart],
        ),
        returnValue: _i4.Future<_i2.CartEntity>.value(_FakeCartEntity_1(
          this,
          Invocation.method(
            #sendProductToCart,
            [cart],
          ),
        )),
      ) as _i4.Future<_i2.CartEntity>);

  @override
  _i4.Future<_i2.IdEntity> registerUser(_i2.UserEntity? user) =>
      (super.noSuchMethod(
        Invocation.method(
          #registerUser,
          [user],
        ),
        returnValue: _i4.Future<_i2.IdEntity>.value(_FakeIdEntity_2(
          this,
          Invocation.method(
            #registerUser,
            [user],
          ),
        )),
      ) as _i4.Future<_i2.IdEntity>);

  @override
  _i4.Future<_i2.TokenEntity> signInUser(_i2.UserEntity? user) =>
      (super.noSuchMethod(
        Invocation.method(
          #signInUser,
          [user],
        ),
        returnValue: _i4.Future<_i2.TokenEntity>.value(_FakeTokenEntity_3(
          this,
          Invocation.method(
            #signInUser,
            [user],
          ),
        )),
      ) as _i4.Future<_i2.TokenEntity>);

  @override
  _i4.Future<_i2.UserEntity> getInfoUser(String? idUser) => (super.noSuchMethod(
        Invocation.method(
          #getInfoUser,
          [idUser],
        ),
        returnValue: _i4.Future<_i2.UserEntity>.value(_FakeUserEntity_4(
          this,
          Invocation.method(
            #getInfoUser,
            [idUser],
          ),
        )),
      ) as _i4.Future<_i2.UserEntity>);

  @override
  _i4.Future<List<String>> getCategories() => (super.noSuchMethod(
        Invocation.method(
          #getCategories,
          [],
        ),
        returnValue: _i4.Future<List<String>>.value(<String>[]),
      ) as _i4.Future<List<String>>);
}
