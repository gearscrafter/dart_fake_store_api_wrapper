// Mocks generated by Mockito 5.4.4 from annotations
// in dart_fake_store_api_wrapper/test/domain/use_cases/users_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i4;

import 'package:dart_fake_store_api_wrapper/src/core/errors/failures.dart'
    as _i5;
import 'package:dart_fake_store_api_wrapper/src/domain/entities/user_entity.dart'
    as _i6;
import 'package:dart_fake_store_api_wrapper/src/domain/repositories/user_repository.dart'
    as _i3;
import 'package:dartz/dartz.dart' as _i2;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeEither_0<L, R> extends _i1.SmartFake implements _i2.Either<L, R> {
  _FakeEither_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [UserRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockUserRepository extends _i1.Mock implements _i3.UserRepository {
  MockUserRepository() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.Future<_i2.Either<_i5.Failure, _i6.IdEntity>> register(
          _i6.UserEntity? user) =>
      (super.noSuchMethod(
        Invocation.method(
          #register,
          [user],
        ),
        returnValue: _i4.Future<_i2.Either<_i5.Failure, _i6.IdEntity>>.value(
            _FakeEither_0<_i5.Failure, _i6.IdEntity>(
          this,
          Invocation.method(
            #register,
            [user],
          ),
        )),
      ) as _i4.Future<_i2.Either<_i5.Failure, _i6.IdEntity>>);

  @override
  _i4.Future<_i2.Either<_i5.Failure, _i6.TokenEntity>> signIn(
          _i6.UserEntity? user) =>
      (super.noSuchMethod(
        Invocation.method(
          #signIn,
          [user],
        ),
        returnValue: _i4.Future<_i2.Either<_i5.Failure, _i6.TokenEntity>>.value(
            _FakeEither_0<_i5.Failure, _i6.TokenEntity>(
          this,
          Invocation.method(
            #signIn,
            [user],
          ),
        )),
      ) as _i4.Future<_i2.Either<_i5.Failure, _i6.TokenEntity>>);

  @override
  _i4.Future<_i2.Either<_i5.Failure, _i6.UserEntity>> getInfo(String? idUser) =>
      (super.noSuchMethod(
        Invocation.method(
          #getInfo,
          [idUser],
        ),
        returnValue: _i4.Future<_i2.Either<_i5.Failure, _i6.UserEntity>>.value(
            _FakeEither_0<_i5.Failure, _i6.UserEntity>(
          this,
          Invocation.method(
            #getInfo,
            [idUser],
          ),
        )),
      ) as _i4.Future<_i2.Either<_i5.Failure, _i6.UserEntity>>);
}
